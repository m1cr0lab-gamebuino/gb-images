/**
 * ----------------------------------------------------------------------------
 * Handling images on the Gamebuino META
 * © 2021 Stéphane Calderoni
 * ----------------------------------------------------------------------------
 * Assets encoded for 16-indexed colors display mode
 * ----------------------------------------------------------------------------
 */

#pragma once

#include <Gamebuino-Meta.h>

const Color PALETTE[] = {

    (Color) 0x0000, // 0x0
    (Color) 0x18c3, // 0x1
    (Color) 0x3186, // 0x2
    (Color) 0x4228, // 0x3
    (Color) 0x632c, // 0x4
    (Color) 0xad55, // 0x5
    (Color) 0xee2f, // 0x6
    (Color) 0xff36, // 0x7
    (Color) 0x0862, // 0x8
    (Color) 0x10e4, // 0x9
    (Color) 0x1926, // 0xa
    (Color) 0x6217, // 0xb
    (Color) 0x7afa, // 0xc
    (Color) 0xb4df, // 0xd
    (Color) 0xf81f, // 0xe
    (Color) 0x0000  // 0xf

};

const uint8_t SPRITE_DATA[] = {

    // metadata

    8,    // frame width
    8,    // frame height
    0x04, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xe,  // transparent color
    1,    // indexed color mode

    // colormap

    // frame 1/4
    0xee, 0x45, 0x55, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0x60, 0x70, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0xcd, 0xdd, 0xee,
    0xee, 0x7d, 0xdd, 0x7e,
    0xee, 0xcd, 0xdd, 0xee,
    0xee, 0xbe, 0xeb, 0xee,

    // frame 2/4
    0xee, 0x45, 0x55, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0x60, 0x70, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0xcd, 0xdd, 0xee,
    0xe7, 0xcd, 0xdd, 0xc7,
    0xee, 0xcd, 0xdd, 0xee,
    0xee, 0xec, 0xbe, 0xee,

    // frame 3/4
    0xee, 0x45, 0x55, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0x60, 0x70, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0xcd, 0xdd, 0xee,
    0xee, 0x7d, 0xdd, 0x7e,
    0xee, 0xcd, 0xdd, 0xee,
    0xee, 0xbe, 0xeb, 0xee,

    // frame 4/4
    0xee, 0x45, 0x55, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0x60, 0x70, 0xee,
    0xee, 0x67, 0x77, 0xee,
    0xee, 0xcd, 0xdd, 0xee,
    0xee, 0xcc, 0x7d, 0xee,
    0xee, 0xcd, 0xdd, 0xee,
    0xeb, 0xee, 0xee, 0xce

};

const uint8_t TILESET_DATA[] = {

    // metadata

    16,   // frame width
    8,    // frame height
    0x04, // frames (lower byte)
    0x00, // frames (upper byte)
    0,    // frame loop
    0xe,  // transparent color
    1,    // indexed color mode

    // colormap

    // frame 1/4
    0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xa0,
    0xaa, 0x9a, 0x9a, 0x9a, 0x9a, 0x99, 0x99, 0x98,
    0xa9, 0xa9, 0xa9, 0xa9, 0x99, 0x99, 0x99, 0x98,
    0xaa, 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0x98,
    0xa9, 0xa9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x98,
    0xaa, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x98,
    0xa9, 0xa9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x88,
    0xaa, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x98,

    // frame 2/4
    0x34, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44,
    0x53, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
    0x43, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
    0x02, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22,
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
    0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02,
    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,

    // frame 3/4
    0xa9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x88,
    0xaa, 0x99, 0x99, 0x99, 0x99, 0x99, 0x98, 0x98,
    0xa9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x88,
    0xa9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x98, 0x98,
    0xa9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x89, 0x88,
    0xa9, 0x99, 0x99, 0x99, 0x98, 0x98, 0x98, 0x98,
    0xa9, 0x99, 0x99, 0x89, 0x89, 0x89, 0x89, 0x88,
    0x08, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x80,

    // frame 4/4
    0x04, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x21,
    0x42, 0x12, 0x12, 0x12, 0x11, 0x11, 0x11, 0x10,
    0x21, 0x21, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10,
    0x22, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10,
    0x21, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x00,
    0x21, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x10,
    0x21, 0x11, 0x11, 0x01, 0x01, 0x01, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01

};